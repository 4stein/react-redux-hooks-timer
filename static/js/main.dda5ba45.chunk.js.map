{"version":3,"sources":["logo.svg","redux/reducers/TimeReducer.js","components/Timer/Timer.js","components/Timer/TimerContainer.js","App.js","reportWebVitals.js","redux/reducers/RootReducer.js","redux/TimerStore.js","index.js"],"names":["RESET_TIMER","START_TIMER","STOP_TIMER","WAIT_TIMER","initialState","startedAt","undefined","stoppedAt","baseTime","Timer","props","elapsed","onClick","onStart","onStop","onDoubleClick","onWait","onReset","TimerContainer","useState","setValue","useEffect","interval","setInterval","value","clearInterval","notes","useSelector","state","timer","Math","floor","Date","now","getElapsedTime","dispatch","useDispatch","type","startTimer","App","className","src","logo","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dda5ba45.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","// Consts\r\nconst RESET_TIMER = 'RESET_TIMER';\r\nconst START_TIMER = 'START_TIMER';\r\nconst STOP_TIMER = 'STOP_TIMER';\r\nconst WAIT_TIMER = 'WAIT_TIMER';\r\n\r\n\r\n// initialState\r\nconst initialState = {\r\n    startedAt: undefined,\r\n    stoppedAt: undefined,\r\n    baseTime: undefined\r\n};\r\n// Reducer\r\nexport const TimeReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case RESET_TIMER:\r\n            return {\r\n                ...state,\r\n                baseTime: 0,\r\n                startedAt: state.startedAt ? action.now : undefined,\r\n                stoppedAt: state.stoppedAt ? action.now : undefined\r\n            };\r\n        case START_TIMER:\r\n            return {\r\n                ...state,\r\n                baseTime: action.baseTime,\r\n                startedAt: action.now,\r\n                stoppedAt: undefined\r\n            };\r\n        case STOP_TIMER:\r\n            return {\r\n                ...state,\r\n                startedAt: undefined,\r\n                stoppedAt: undefined,\r\n                baseTime: 0,\r\n            }\r\n        case WAIT_TIMER:\r\n            return {\r\n                ...state,\r\n                stoppedAt: action.now\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// Action Creators\r\nexport const startTimer = (baseTime = 0) => {\r\n    return {\r\n        type: START_TIMER,\r\n        baseTime: baseTime,\r\n        now: Math.floor(Date.now() / 1000)\r\n    };\r\n}\r\n\r\nexport const stopTimer = () => {\r\n    return {\r\n        type: STOP_TIMER,\r\n        now: Math.floor(Date.now() / 1000)\r\n    };\r\n}\r\n\r\nexport const waitTimer = () => {\r\n    return {\r\n        type: WAIT_TIMER,\r\n        now: Math.floor(Date.now() / 1000)\r\n    };\r\n}\r\n\r\nexport const resetTimer = () => {\r\n    return {\r\n        type: RESET_TIMER,\r\n        now: Math.floor(Date.now() / 1000)\r\n    }\r\n}","import React from 'react';\r\n\r\nexport const Timer = (props) => (\r\n    <div>\r\n        <div>Time: {props.elapsed}</div>\r\n        <div>\r\n            <button onClick={() => props.onStart(props.elapsed)}>Start</button>\r\n            <button onClick={() => props.onStop()}>Stop</button>\r\n            <button onDoubleClick={() => props.onWait()}>Wait</button>\r\n            <button onClick={() => props.onReset()}>Reset</button>\r\n        </div>\r\n    </div>\r\n);\r\n","import React, {useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {resetTimer, startTimer, stopTimer, waitTimer} from \"../../redux/reducers/TimeReducer\";\r\nimport {Timer} from \"./Timer\";\r\n\r\n\r\nfunction getElapsedTime(baseTime, startedAt, stoppedAt = Math.floor(Date.now() / 1000)) {\r\n    if (!startedAt) {\r\n        return 0;\r\n    } else {\r\n        return stoppedAt - startedAt + baseTime;\r\n    }\r\n}\r\n\r\nexport const TimerContainer = () => {\r\n\r\n    // useState / usEffect\r\n    const [value, setValue] = useState(0);\r\n    useEffect(() => {\r\n        const interval = setInterval(() => setValue(value => value + 1), 1000);\r\n        return () => clearInterval(interval);\r\n    }, []);\r\n    // useSelector\r\n    const notes = useSelector((state) => {\r\n        const {baseTime, startedAt, stoppedAt} = state.timer;\r\n        return {baseTime, startedAt, stoppedAt};\r\n    });\r\n    const {baseTime, startedAt, stoppedAt} = notes;\r\n    const elapsed = getElapsedTime(baseTime, startedAt, stoppedAt);\r\n    // useDispatch\r\n    const dispatch = useDispatch();\r\n    const onStart = (elapsed) => {dispatch(startTimer(elapsed))}\r\n    const onStop = () => {dispatch(stopTimer())}\r\n    const onWait = () => {dispatch(waitTimer())}\r\n    const onReset = () => {dispatch(resetTimer())}\r\n\r\n\r\n    return (\r\n        <Timer\r\n            elapsed={elapsed}\r\n            onStart={onStart}\r\n            onStop={onStop}\r\n            onWait={onWait}\r\n            onReset={onReset}\r\n        />\r\n    );\r\n}","import logo from './logo.svg';\nimport './App.css';\nimport {TimerContainer} from \"./components/Timer/TimerContainer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          My React-Redux Timer\n        </p>\n        <TimerContainer />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {combineReducers} from \"redux\";\r\nimport {TimeReducer} from \"./TimeReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    timer: TimeReducer\r\n})\r\n\r\nexport default rootReducer;","import {createStore} from \"redux\";\r\nimport rootReducer from \"./reducers/RootReducer\";\r\n\r\nexport const store = createStore(rootReducer);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./redux/TimerStore\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <React.StrictMode>\n            <App/>\n        </React.StrictMode>\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}